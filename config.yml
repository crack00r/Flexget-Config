

#################################################################################################################################config#by#snickers2k######
################### Global ###########################################################################################################################################################
variables: options.yml # Includes Options.yml file (put in flexget folder besides config.yml)
#######
templates:
  global:
    ######################################## Misc
    verify_ssl_certificates: no
#    magnets: no
    plugin_priority:
      regexp: 250
#    assume_quality:
#      NetflixUHD: bluray
#      NetflixHD: bluray
#      AmazonHD: bluray
#      iTunesHD: bluray
    parsing:
      movie: guessit
      series: guessit
    ######## Some HTML setup
    headers:
      User-Agent: "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.85 Safari/537.36"
    retry_failed:
      retry_time: 60 seconds
      retry_time_multiplier: 4
      max_retries: 6
    ######## Naming-Fixes
    pathscrub: windows  # Use Windows conform filenames
    manipulate:
    ## Fixes for Settings.org
      - title:
          replace:            
            regexp: '.(Deutsch|Englisch).'
            format: ''
      - title:
          replace:
            regexp: '!|tv-film|,'
            format: ''
    ## German-Locale-fixes
      - title:
          replace:
            regexp: 'ö'
            format: 'oe'
      - title:
          replace:
            regexp: 'ä'
            format: 'ae'
      - title:
          replace:
            regexp: 'ü'
            format: 'ue'
      - title:
          replace:
            regexp: 'ß'
            format: 'ss'
    ######################################## Global Exclude  (For testing: https://regex101.com)
    regexp:
      reject:
      # Release
        - \b(duo|tri|quadri|tetra|penta)logy\b # Movie-Collections (often we already have some of those in our Library)
        - \bcomplete\b   # Complete (usually stands for complete series - not working well with flexget)
        - \bcollection\b   # Collections (usually stands for complete series - not working well with flexget)
        - \buntouched\b   # Untouched (usually complete BDs with extras - incompatible with Plex/Kodi etc.)
        - \bdirectors.cut\b   # usually nerdish, too long Versions of a Movie
        - \bextended\b # usually nerdish, too long Versions of a Movie
      # Video
        - \b((hd|)ts|telesync)\b   # Bad-Quality
        - \b((hd|)cam)\b   # Bad-Quality
        - \brucke([^\s]+)\b # ruckel/ruckeln/ruckelt/ruckelig ## German for "lagging", Bad-Quality 
        - \b(bd|dvd|)scr(\b|eener)\b   # BD- / DVD- / SCR(EENER)
        - \br(5|6)\b   # R5/6 (Region Release: Asia & East-Europe - usually bad Quality)
        - \b(un|)sub(|s|bed)\b # Subtitles (Sub / Subs / Subbed / Unsubbed)
        - \b(hc|hardcoded)\b # Subtitles (HC / Hardcoded)
        - \b(web|)blur(\b|rt|red)\b # Blurred-Subtitles
        - \biso\b: {from: description} # ISO-Files
#        - \bread.nfo\b # usually means there is something in the nfo-file, mostly about hardcoded subs or other "bad"-Info
      # Audio
        - \bflac\b   # flac
        - \bac3md|md|mic|mic.dubbed\b
###############################################################################################################################################
### Templates #################################################################################################################################
###############################################################################################################################################

  ######################################## Movie-Global
  movies_lookup:
    imdb_lookup: yes
    trakt_lookup:
      account: '{? trakt.acc ?}'
#    tmdb_lookup: yes
#    rottentomatoes_lookup: yes
  ######################################## Series-Global
  series_lookup:
    plugin_priority:
      # manipulate must fix the titles before metainfo_series.
      manipulate: 255
    metainfo_series: yes
    thetvdb_lookup:
      language: de
    trakt_lookup:
      account: '{? trakt.acc ?}' 
    set:
      tvdb_language: de
    manipulate:
      - title:
          replace:
            regexp: '^\[[^\]]*\][^a-z0-9]*'
            format: ''
      - title:
          replace:
            regexp: '^{[^\]]*}[^a-z0-9]*'
            format: ''
      - title:
          replace:
            regexp: '^\([^\]]*\)[^a-z0-9]*'
            format: ''
  ######################################## No_Seen
  no_seen:
    disable:
      - seen
      - seen_info_hash
      - seen_movies
  ######################################## Download Streams
  Movie_Streams:
    inputs:
#      - rss: '{? flexget.path ?}/External-Plugins/HDArea-Feed/HDArea.xml' #not working right now
      - rss: '{? flexget.path ?}/External-Plugins/HDWorld-Movies-Feed/HDWorld.xml'
      - rss: 'https://nima4k.org/rss_movies.xml'

  Series_Streams:
    inputs:
      - rss: '{? flexget.path ?}/External-Plugins/HDWorld-Series-Feed/HDWorld.xml'    
      - rss: '{? flexget.path ?}/External-Plugins/Serienjunkies-Feed/rss_feed_1.xml'
      - rss: '{? flexget.path ?}/External-Plugins/Serienjunkies-Feed/rss_feed_2.xml'
      - rss: '{? flexget.path ?}/External-Plugins/Serienjunkies-Feed/rss_feed_3.xml'
      - rss: '{? flexget.path ?}/External-Plugins/Serienjunkies-Feed/rss_feed_4.xml'
      - rss: '{? flexget.path ?}/External-Plugins/Serienjunkies-Feed/rss_feed_5.xml'
      - rss: '{? flexget.path ?}/External-Plugins/Serienjunkies-Feed/rss_feed_6.xml'
      - rss: '{? flexget.path ?}/External-Plugins/Serienjunkies-Feed/rss_feed_7.xml'
      - rss: '{? flexget.path ?}/External-Plugins/Serienjunkies-Feed/rss_feed_8.xml'
      - rss: '{? flexget.path ?}/External-Plugins/Serienjunkies-Feed/rss_feed_9.xml'
      
  ######################################## Enable/Disable Discover
  Discover-enable-Backfill:
    discover:
      what:
        - next_series_episodes:
            backfill: yes
            from_start: yes
      from:
        - searchSerienjunkies:
            hoster: '{? Settings.Hoster ?}'
            language: '{? Settings.Language ?}'
    no_entries_ok: yes

  Discover-disable-Backfill:
    discover:
      what:
        - next_series_episodes:
            backfill: no
      from:
        - searchSerienjunkies:
            hoster: '{? Settings.Hoster ?}'
            language: '{? Settings.Language ?}'
    no_entries_ok: yes

  ######################################## Enable/Disable Upgrade

  enable-Upgrade:
    configure_series:
      settings:
        target: '{? quality.main ?}'
        quality: '{? quality.low ?}'
        propers: 2 weeks        
        timeframe: 24 hours
        identified_by: ep
        tracking: '{? series.tracking ?}'
        upgrade: yes 
        season_packs: yes
      from:
        trakt_list:
          account: '{? trakt.acc ?}'
          list: collection
          type: shows
          strip_dates: yes

  disable-Upgrade:
    configure_series:
      settings:
        target: '{? quality.main ?}'
        quality: '{? quality.low ?}'
        propers: 2 weeks        
        timeframe: 24 hours
        identified_by: ep
        tracking: '{? series.tracking ?}'
        upgrade: no
        season_packs: yes
      from:
        trakt_list:
          account: '{? trakt.acc ?}'
          list: collection
          type: shows
          strip_dates: yes

  ######################################## Enable/Disable Special (Author) Tasks
  enable-Download_Second_IMDb_Movies:
    manual: no
  disable-Download_Second_IMDb_Movies:
    manual: yes    

  enable-Sync_Main_IMDb_to_Second:
    manual: no
  disable-Sync_Main_IMDb_to_Second:
    manual: yes  

  enable-Studio_Downloads:
    manual: no
  disable-Studio_Downloads:
    manual: yes 

  enable-Download_Best_on_IMDb:
    manual: no
  disable-Download_Best_on_IMDb:
    manual: yes 

  enable-YouTube_Downloads: 
    manual: no
  disable-YouTube_Downloads: 
    manual: yes

  enable-Download_Specials: 
    manual: no
  disable-Download_Specials: 
    manual: yes

  enable-Download_Specials2: 
    manual: no
  disable-Download_Specials2: 
    manual: yes

  enable-Download_Sports: 
    manual: no
  disable-Download_Sports: 
    manual: yes

  ######################################## Languages
  German:
  # Accept Only German, by Title
    regexp:
      reject_excluding:
        - \bgerman\b
  English:
  # Accept Only Non-German
    regexp:
      reject:
        - \bgerman\b
  #################
  enable-English:
    exec:
      - echo "English Enabled"
  disable-English:
    manual: yes
    exec:
      - echo "English Disabled"
  ######################################## DownloadManager
  ################## JDownloader
  ######## Defaults
  jdownloader-Defaults:
    exec:
      - echo " " >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
      - echo "text={{url}}" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
      - echo "autoConfirm=TRUE" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
      - echo "priority=LOWER" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
      - echo "packageName={{title}}" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"


  ######## Archive-Series
  jdownloader-Archive-Series:
    exec:
      - echo "downloadFolder={? DLFolder ?}/{? DLFolderArchive ?}/Series/{{title}}/" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
  ######## Archive-Movies
  jdownloader-Archive-Movies:
    exec:
      - echo "downloadFolder={? DLFolder ?}/{? DLFolderArchive ?}/Movies/{{title}}/" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
  ######## Watchlist
  jdownloader-Watchlist-Series:
    exec:
      - echo "downloadFolder={? DLFolder ?}/{? DLFolderWatchlist ?}/Series/{{title}}/" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
  ######## Watchlist
  jdownloader-Watchlist-Movies:
    exec:
      - echo "downloadFolder={? DLFolder ?}/{? DLFolderWatchlist ?}/Movies/{{title}}/" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
  ######## YouTube
  jdownloader-YouTube:
    exec:
      - echo "downloadFolder={? DLFolder ?}/{? DLFolderYouTube ?}/{{title}}/" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
  ######## 3D
  jdownloader-3D:
    exec:
      - echo "downloadFolder={? DLFolder ?}/{? DLFolder3D ?}/{{title}}/" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
  ######## YouTube
  jdownloader-EBooks:
    exec:
      - echo "downloadFolder={? DLFolder ?}/{? DLFolderEBooks ?}/{{title}}/" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
  ######## Sports
  jdownloader-Sports:
    exec:
      - echo "downloadFolder={? DLFolder ?}/{? DLFolderSports ?}/{{title}}/" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
  ######## Queue-enable
  jdownloader-enable-Queue:
    exec:
      - echo "autoStart=TRUE" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
      - echo "forcedStart=TRUE" >> "{? JDownloader.path ?}/folderwatch/{{title}}.crawljob"
  ######## Queue-Disable
  jdownloader-disable-Queue:
    exec:
      - echo "Queue-Disabled -> Downloads parked"

#   ################## pyLoad (buggy? needs testing, i'm not a pyLoad-User anymore)
#   ######## Defaults
  pyload-Defaults:
    exec:
      - echo "Downloading with pyLoad"
#   ######## Archive-Movies
  pyload-Archive-Movies:
    pyload:
      enabled: yes
      folder: '{? DLFolder ?}/{? DLFolderArchive ?}/Movies/{{title}}'
      api: '{? pyload.protocol ?}://{? pyload.ip ?}:{? pyload.port ?}/api'
      username: '{? pyload.usr ?}'
      password: '{? pyload.pwd ?}'
      multiple_hoster: yes
      queue: yes
      hoster:
        - '{? pyload.hoster1 ?}'
        - '{? pyload.hoster2 ?}'
#   ######## Archive-Movies
  pyload-Archive-Series:
    pyload:
      enabled: yes
      folder: '{? DLFolder ?}/{? DLFolderArchive ?}/Series/{{title}}'
      package: '{{series_name}} - {{series_id}}'
      api: '{? pyload.protocol ?}://{? pyload.ip ?}:{? pyload.port ?}/api'
      username: '{? pyload.usr ?}'
      password: '{? pyload.pwd ?}'
      multiple_hoster: yes
      queue: yes
      hoster:
        - '{? pyload.hoster1 ?}'
        - '{? pyload.hoster2 ?}'
#   ######## Watchlist
  pyload-Watchlist-Movies:
    pyload:
      enabled: yes
      folder: '{? DLFolder ?}/{? DLFolderWatchlist ?}/Movies/{{title}}'
      api: '{? pyload.protocol ?}://{? pyload.ip ?}:{? pyload.port ?}/api'
      username: '{? pyload.usr ?}'
      password: '{? pyload.pwd ?}'
      multiple_hoster: yes
      queue: yes
      hoster:
        - '{? pyload.hoster1 ?}'
        - '{? pyload.hoster2 ?}'
#   ######## Watchlist
  pyload-Watchlist-Series:
    pyload:
      enabled: yes
      folder: '{? DLFolder ?}/{? DLFolderWatchlist ?}/Series/{{title}}'
      package: '{{series_name}} - {{series_id}}'
      api: '{? pyload.protocol ?}://{? pyload.ip ?}:{? pyload.port ?}/api'
      username: '{? pyload.usr ?}'
      password: '{? pyload.pwd ?}'
      multiple_hoster: yes
      queue: yes
      hoster:
        - '{? pyload.hoster1 ?}'
        - '{? pyload.hoster2 ?}'
#   ######## 3D
  pyload-3D:
    pyload:
      enabled: yes
      folder: '{? DLFolder ?}/{? DLFolder3D ?}/{{title}}'
      api: '{? pyload.protocol ?}://{? pyload.ip ?}:{? pyload.port ?}/api'
      username: '{? pyload.usr ?}'
      password: '{? pyload.pwd ?}'
      multiple_hoster: yes
      queue: yes
      hoster:
        - '{? pyload.hoster1 ?}'
        - '{? pyload.hoster2 ?}'
#   ######## Ebooks
  pyload-EBooks:
    pyload:
      enabled: yes
      folder: '{? DLFolder ?}/{? DLFolderEBooks ?}/{{title}}'
      api: '{? pyload.protocol ?}://{? pyload.ip ?}:{? pyload.port ?}/api'
      username: '{? pyload.usr ?}'
      password: '{? pyload.pwd ?}'
      multiple_hoster: yes
      queue: yes
      hoster:
        - '{? pyload.hoster1 ?}'
        - '{? pyload.hoster2 ?}'
#   ######## 3D
  pyload-Sports:
    pyload:
      enabled: yes
      folder: '{? DLFolder ?}/{? DLFolderSports ?}/{{title}}'
      api: '{? pyload.protocol ?}://{? pyload.ip ?}:{? pyload.port ?}/api'
      username: '{? pyload.usr ?}'
      password: '{? pyload.pwd ?}'
      multiple_hoster: yes
      queue: yes
      hoster:
        - '{? pyload.hoster1 ?}'
        - '{? pyload.hoster2 ?}'
#   ######## YouTube
  pyload-Youtube:
    pyload:
      enabled: yes
      folder: '{? DLFolder ?}/{? DLFolderYouTube ?}/{{title}}'
      api: '{? pyload.protocol ?}://{? pyload.ip ?}:{? pyload.port ?}/api'
      username: '{? pyload.usr ?}'
      password: '{? pyload.pwd ?}'
      multiple_hoster: yes
      queue: yes
      hoster:
        - '{? pyload.hoster1 ?}'
        - '{? pyload.hoster2 ?}'
#   ######## Queue-Enable
  pyload-enable-Queue:
    exec:
      - echo "Queue globally enabled for pyload"
#   ######## Queue-Disable
  pyload-disable-Queue:
    exec:
      - echo "Queue globally enabled for pyload"
###############################################################################################################################################
### Tasks #####################################################################################################################################
###############################################################################################################################################

tasks:
############################################################################################################ DATABASE UPDATES
############################################################################################################

  ############################################################## Updates
  #
  ########################################
  Crawl_Plugins:
    interval: 1 hours
    template:
      - no_seen
      - no_global
    priority: 1
    no_entries_ok: yes
    exec:
      on_start:
        phase: 
          - "cd {? flexget.path ?}/External-Plugins/HDArea-Feed/ && rm *.xml; python ./HDAreaOrg-RSS.py"
          - "cd {? flexget.path ?}/External-Plugins/HDWorld-Movies-Feed/ && rm *.xml; python ./HDWorld-Movies-RSS.py"
          - "cd {? flexget.path ?}/External-Plugins/HDWorld-Series-Feed/ && rm *.xml; python ./HDWorld-Series-RSS.py"
          - "cd {? flexget.path ?}/External-Plugins/Serienjunkies-Feed/ && rm *.xml; python ./Serienjunkies-RSS.py"          
  #
  ######################################## Sync Trakt/IMDb Movie-Watchlist to Flexget-Queue
  Update_Movies_to_Flexget:
    interval: 24 hours
    template: no_global
    priority: 2
    trakt_list:
      account: '{? trakt.acc ?}'
      list: watchlist
      type: movies
    imdb_watchlist:
      user_id: '{? imdb.usrID ?}'
      list: watchlist
      force_language: de-de
    accept_all: yes
    seen: local
    crossmatch:
      from:
        - trakt_list:
            account: '{? trakt.acc ?}'
            list: collection
            type: movies
      fields:
        - imdb_id
      action: reject
    list_add:
      - movie_list: Default
  ######################################## Set_Series_Begin based on "Collected" in Trakt - for every show
  Update_Series_Begin:
    interval: 24 hours
    priority: 3
    template:
      - no_seen
      - no_global
      - series_lookup
    next_trakt_episodes:
      account: '{? trakt.acc ?}'
      context: collected
      list: collection
    accept_all: yes
    set_series_begin: yes   

#   ######################################## Fill Favorites
#   Update_Movie_Favorites:
#     priority: 1
#     template:
#       - no_seen
#       - no_global
#     trakt_lookup:
#       account: '{? trakt.acc ?}'   
#     trakt_list:
#       account: '{? trakt.acc ?}'
#       list: collection
#       type: movies
#     if:
#       - trakt_movie_user_rating > 9: accept
#     list_add:
#       - trakt_list:
#           account: '{? trakt.acc ?}'
#           list: '{? trakt.Favorite_List ?}'
#           type: movies
#       - trakt_list:
#           account: '{? trakt.acc ?}'
#           list: '{? trakt.FavoritesUpgrade ?}'
#           type: movies
  ############################################################## Removings
  #
  ######################################## Remove canceled Series (Nobody wants to start watching canceled Series, or ?!)
  Remove_Canceled:
    priority: 1
    template:
      - no_seen
      - no_global
      - series_lookup
    trakt_list:
      account: '{? trakt.acc ?}'
      list: watchlist
      type: shows
    imdb_list:
      login: '{? imdb.usr ?}'
      password: '{? imdb.pwd ?}'
     list: watchlist
    if:
      - trakt_series_status == 'canceled': accept
    list_remove:
      - trakt_list:
          account: '{? trakt.acc ?}'
          list: watchlist
          type: shows
      - trakt_list:
          account: '{? trakt.acc ?}'
          list: '{? trakt.foreign ?}'
          type: shows
  #########
  Keep_Canceled_Collection:
    exec:
      - echo "Canceled Collections won't be deleted"
    manual: yes
  ######################################## Remove Collected
  Remove_CollectedSeriesFromWatchlist:
    priority: 1
    interval: 24 hours
    seen: local
    template:
      - no_global
    trakt_list:
      account: '{? trakt.acc ?}'
      list: watchlist
      type: shows
   imdb_list:
     login: '{? imdb.usr ?}'
     password: '{? imdb.pwd ?}'
     list: watchlist 
    crossmatch:
      from:
        - trakt_list:
            account: '{? trakt.acc ?}'
            list: collection
            type: shows
      fields:
        - imdb_id
      action: accept
    list_remove:
      - trakt_list:
          account: '{? trakt.acc ?}'
          list: watchlist
          type: shows
     - imdb_list:
         login: '{? imdb.usr ?}'
         password: '{? imdb.pwd ?}'
         list: watchlist
  ######################################## Remove Collected trakt-Watchlist
  Remove_CollectedMoviesFromWatchlist:
    priority: 1
    interval: 24 hours
    seen: local
    template:
      - no_global
    trakt_list:
      account: '{? trakt.acc ?}'
      list: watchlist
      type: movies
    crossmatch:
      from:
        - trakt_list:
            account: '{? trakt.acc ?}'
            list: collection
            type: movies
      fields:
        - imdb_id
      action: accept
    list_remove:
      - trakt_list:
          account: '{? trakt.acc ?}'
          list: watchlist
          type: movies
      - movie_list: Default
      - imdb_list:
          login: '{? imdb.usr ?}'
          password: '{? imdb.pwd ?}'
          list: watchlist

  ######################################## Remove Series from OnHold automatically, if Episode 3 is already watched - so it starts Downloading again
  Remove_Watched_OnHold:
    priority: 1
    template:
      - no_seen
      - no_global
      - series_lookup
    next_trakt_episodes:
      account: '{? trakt.acc ?}'
      list: '{? trakt.OnHold ?}'
      context: watched
      position: next
    if:
      - trakt_ep_id > 'S01E{? series.Start_Collection_counter ?}': accept
    list_remove:
      - trakt_list:    
          account: '{? trakt.acc ?}'
          list: '{? trakt.OnHold ?}'
          type: shows
      - trakt_list:
          account: '{? trakt.acc ?}'
          list: watchlist
          type: shows

############################################################################################################ Movies ############################################################################################################

 ######################################## Search for queued Movies
  Movies_Watchlist_Search_DE_Main:
#    proper_movies: yes  #accept Quality-fixes (Proper means there was a bug in the release before) TOO MANY BUGS
    priority: 4
    template:
      - '{? DownloadManager ?}-Defaults'
      - '{? DownloadManager ?}-{? ArchiveOrWatchlist ?}-Movies'
      - '{? DownloadManager ?}-{? DownloadManagerQueue ?}-Queue'
#      - movies_lookup
      - German
    quality: '{? quality.main ?}'
#    content_size: (not working well - too often, size can't be fetched at all and results in errors
#      min: 2500 #'{? Minimum_Movie_Size ?}'
#      max: 20000  #'{? Maximum_Movie_Size ?}'
    discover:
      what:
        - movie_list:
            list_name: Default
            strip_year: yes
      from:
        - searchHdarea:
            hoster: '{? Settings.Hoster ?}'
        - searchHdworld:
            hoster: '{? Settings.Hoster ?}'
        - searchMovieBlog:
            hoster: '{? Settings.Hoster ?}'
    list_remove:
      - trakt_list:
          account: '{? trakt.acc ?}'
          list: watchlist
          type: movies
      - trakt_list:
          account: '{? trakt.acc ?}'
          list: UpgradeQuality
          type: movies
 ######################################## Search for queued Movies on hdarea with the help of a custom  pipe
  Movies_Watchlist_Search_DE_Low:
#    proper_movies: yes  #accept Quality-fixes (Proper means there was a bug in the release before)  TOO MANY BUGS
    delay: 24 hours
    priority: 5
    template:
      - '{? DownloadManager ?}-Defaults'
      - '{? DownloadManager ?}-{? ArchiveOrWatchlist ?}-Movies'
      - '{? DownloadManager ?}-{? DownloadManagerQueue ?}-Queue'
#      - movies_lookup
      - German
    quality: '{? quality.low ?}'
#    content_size:  (not working well - too often, size can't be fetched at all and results in errors
#      min: 2000 #'{? Minimum_Movie_Size ?}'
#      max: 12000  #'{? Maximum_Movie_Size ?}'
    discover:
      what:
        - movie_list:
            list_name: Default
            strip_year: yes
      from:
        - searchHdarea:
            hoster: shareonline
        - searchHdworld:
            hoster: shareonline
        - searchMovieBlog:
            hoster: shareonline
  ######################################## Search based on Stream
  Movies_Watchlist_Stream_DE_Main:
#    proper_movies: yes  #accept Quality-fixes (Proper means there was a bug in the release before) ##buggy
    priority: 4
    template:
      - '{? DownloadManager ?}-Defaults'
      - '{? DownloadManager ?}-{? ArchiveOrWatchlist ?}-Movies'
      - '{? DownloadManager ?}-{? DownloadManagerQueue ?}-Queue'
#      - movies_lookup
      - German            #differentiation not possible with this feed right now - feed is pre-filtered for German - needs fix
      - Movie_Streams
    quality: '{? quality.main ?}'
#    content_size: (not working well - too often, size can't be fetched at all and results in errors
#      min: 2000 #'{? Minimum_Movie_Size ?}'
#      max: 20000  #'{? Maximum_Movie_Size ?}'
    list_match:
      from:
        - movie_list: Default
        - trakt_list:
            account: '{? trakt.acc ?}'
            list: UpgradeQuality
            type: movies
    list_remove:
      - trakt_list:
          account: '{? trakt.acc ?}'
          list: watchlist
          type: movies
      - imdb_list:
          login: '{? imdb.usr ?}'
          password: '{? imdb.pwd ?}'
          list: watchlist
    regexp:
      reject:
        - \b3D\b
  ######################################## Search based on Stream
  Movies_Watchlist_Stream_DE_Low:
    delay: 24 hours
    priority: 5
    template:
      - '{? DownloadManager ?}-Defaults'
      - '{? DownloadManager ?}-{? ArchiveOrWatchlist ?}-Movies'
      - '{? DownloadManager ?}-{? DownloadManagerQueue ?}-Queue'
#      - movies_lookup
      - German            #differentiation not possible with this feed right now - feed is pre-filtered for German - needs fix
      - Movie_Streams
    quality: '{? quality.low ?}'
#    content_size: (not working well - too often, size can't be fetched at all and results in errors
#      min: 2000 #'{? Minimum_Movie_Size ?}'
#      max: 12000  #'{? Maximum_Movie_Size ?}'
    if:
      - trakt_collected: reject
    list_match:
      from:
        - movie_list: Default
    crossmatch:
      from:
        - trakt_list:
            account: '{? trakt.acc ?}'
            list: '{? trakt.Favorite_List ?}'
            type: movies      
      fields:
        - imdb_id
      action: reject
    regexp:
      reject:
        - \b3D\b
            
  ######################################## 3D
  Movies_3D_Stream:
#    proper_movies: yes  #accept Quality-fixes (Proper means there was a bug in the release before)
    priority: 3
    template:
      - '{? DownloadManager ?}-Defaults'
      - '{? DownloadManager ?}-{? DownloadManagerQueue ?}-Queue'
      - jdownloader-3D
      - movies_lookup
      - German            #differentiation not possible with this feed right now - feed is pre-filtered for German - needs fix
      - Movie_Streams
    quality: '{? quality.main ?}'
    list_match:
      from:
        - movie_list: Default
        - trakt_list:
            account: '{? trakt.acc ?}'
            list: collection
            type: movies  
    regexp:
      reject_excluding:
        - \b3D\b
    seen: local
  ######################################## Search based on Stream
#   Movies_Watchlist_Stream_EN_Sceper:
#     priority: 6
#     seen: local
#     template:
#       - '{? DownloadManager ?}-Defaults'
#       - '{? DownloadManager ?}-Watchlist-Movies'
#       - '{? DownloadManager ?}-{? DownloadManagerQueue ?}-Queue'
#       - '{? English ?}-English' #enable/disable this Task
#       - English
#       - movies_lookup
#     quality: '{? quality.main ?}'
#     list_match:
#       from:
#         - movie_list: Default
#       remove_on_match: no
#     sceper: 'http://sceper.ws/category/movies'
#     disable: [urlrewrite_redirect]
#     list_add:
#       - trakt_list:
#           account: '{? trakt.acc ?}'
#           list: '{? trakt.foreign ?}'
#           type: movies
#     if:
#       - not imdb_languages or not 'english' in imdb_languages: reject
#       - 'german' in imdb_languages: reject
#   ######################################## 10 Star Rating = high quality
#   Movies_10Star_HighQuality_Stream:
#     priority: 6
#     seen: local
#     template:
#       - '{? DownloadManager ?}-Defaults'
#       - '{? DownloadManager ?}-Archive-Movies'
#       - '{? DownloadManager ?}-{? DownloadManagerQueue ?}-Queue'
#       - movies_lookup
#       - Movie_Streams
#       - German
#     quality: '{? quality.high ?}'
##    content_size:  (not working well - too often, size can't be fetched at all and results in errors
##      min: 8000
##      max: 20000
#     trakt_list:
#       account: '{? trakt.acc ?}'
#       list: '{? trakt.FavoritesUpgrade ?}'
#       type: movies
#     list_remove:
#       - trakt_list:
#           account: '{? trakt.acc ?}'
#           list: '{? trakt.FavoritesUpgrade ?}'
#           type: movies
#     if:
#       - trakt_movie_user_rating > 9:
#           quality: '{? quality.high ?}'
#           list_add:   
#             - trakt_list:
#                 account: '{? trakt.acc ?}'
#                 list: '{? trakt.Favorite_List ?}'
#                 type: movies
############################################################################################################ Series ############################################################################################################

  ######################################## Stream and Search for Serienunkies

  Series_Collection_DE_Search:
    priority: 7
    template:
      - '{? DownloadManager ?}-Defaults'
      - '{? DownloadManager ?}-{? ArchiveOrWatchlist ?}-Series'
      - '{? DownloadManager ?}-{? DownloadManagerQueue ?}-Queue'
      - 'Discover-{? series.backfill ?}-Backfill'
      - '{? series.backfill ?}-Upgrade'
      - German
#      - series_lookup
    # Crossmatch for Series on HOLD
    crossmatch:
      from:
        - trakt_list:
            account: '{? trakt.acc ?}'
            list: '{? trakt.OnHold ?}'
            type: shows
      fields:
        - imdb_id
      action: reject
    if:     
      - trakt_series_status == 'canceled': reject
  ######################################## Stream and Search for Serienunkies

  Series_Collection_DE_Stream:
    priority: 7
    template:
      - '{? DownloadManager ?}-Defaults'
      - '{? DownloadManager ?}-{? ArchiveOrWatchlist ?}-Series'
      - '{? DownloadManager ?}-{? DownloadManagerQueue ?}-Queue'
      - '{? series.backfill ?}-Upgrade'
      - German
#      - series_lookup
      - Series_Streams
    # Crossmatch for Series on HOLD
    crossmatch:
      from:
        - trakt_list:
            account: '{? trakt.acc ?}'
            list: '{? trakt.OnHold ?}'
            type: shows
      fields:
        - imdb_id
      action: reject
    if:     
      - trakt_series_status == 'canceled': reject
  ######################################## Based on Series-Collection "English"

#   Series_Collection_EN:
#     priority: 8
#     template:
#       - '{? DownloadManager ?}-Archive-Series'
#       - '{? DownloadManager ?}-{? DownloadManagerQueue ?}-Queue'
#       - 'Discover-{? series.backfill ?}-Backfill'
#       - series_lookup
#       - English
#     quality: '{? quality.main ?}'
#     seen: local
#     sceper: 'http://sceper.ws/category/tv-shows/tv-shows-x264'
#     disable: [urlrewrite_redirect]
#     if:
#       - trakt_languages == ['german']: reject
#       - imdb_languages == ['german']: reject
  ######################################## Watchlist-Premieres | Needs work for: Prefer DE, otherwise EN
  ################################## What it does: Download Episode 1-3 and add to custom trakt-OnHold-List 
  Series_Watchlist:
    plugin_priority:
      regexp: 250
#     series_premiere:
#       allow_teasers: no
#       allow_seasonless: yes
    priority: 8
    template:
      - '{? DownloadManager ?}-Defaults'
      - '{? DownloadManager ?}-{? ArchiveOrWatchlist ?}-Series'
      - '{? DownloadManager ?}-{? DownloadManagerQueue ?}-Queue'
      - 'Discover-{? series.backfill ?}-Backfill'
#      - series_lookup
      - German
      - Series_Streams
    list_match:
      from:
        - trakt_list:
            account: '{? trakt.acc ?}'
            list: watchlist
            type: shows
      remove_on_match: no
    list_add:
      - trakt_list:
          account: '{? trakt.acc ?}'
          list: '{? trakt.OnHold ?}'
          type: shows
    regexp:
      reject_excluding:
        - \bS01(.E0|E0)('{? series.Stop_watchlist_counter ?}')\b  # counter has to be set in options.yml
    if:     
      - trakt_series_status == 'canceled': reject
############################################################################################################ YouTube ############################################################################################################
  YouTube-Personal-Playlist:
    priority: 10
    rss:
      url: "http://www.youtube.com/feeds/videos.xml?playlist_id={? YouTube.Playlist ?}"
      ascii: yes
    accept_all: yes
    template:
      - '{? disable_enable_tasks.YouTube_Downloads ?}-YouTube_Downloads'
      - '{? DownloadManager ?}-Defaults'
      - '{? DownloadManager ?}-YouTube'
      - no_global
    seen: local
###############################################################################################################################################
## SPECIALS ############################################################################################config#by#snickers2k###################
###############################################################################################################################################

  Sports:
    priority: 10
    regexp:
      accept:
        - Chicago.Bulls
        - Golden.State.Warriors
        - New.York.Knicks
    template:
      - '{? disable_enable_tasks.Download_Sports ?}-Download_Sports'    
      - '{? DownloadManager ?}-Defaults'
      - '{? DownloadManager ?}-Sports'
      - no_global
    seen: local
    csv:
      url: 'file://{? flexget.path ?}/External-Plugins/TVRex/TVRex.csv'
      values:
        title: 1
        quality: 2
        url: 3
  ######################################## Search based on Stream (THIS PLUGIN IS BASED ON https://flexget.com/Plugins/from_imdb AND NEEDS "pip install imdbpy")
  Studio_Downloads:
    priority: 1
    seen: local
    template:
      - no_global
      - '{? disable_enable_tasks.Studio_Downloads ?}-Studio_Downloads'
    from_imdb: 
      content_types: movie
      id:
        # Best Animation Studios
        - co0047265 ## Blue Sky Studios (e.g. Ice Age)
        - co0179259 ## Twentieth Century Fox Animation (e.g. Ice Age, Rio)
        - co0074039 ## Walt Disney Animation Studios (e.g. Frozen)
        - co0129164 ## DreamWorks Animation (e.g. Shrek)
        - co0072491 ## Industrial Light & Magic (e.g. Indiana Jones)
        - co0103818 ## Framestore (e.g. JungleBook)
      max_entries: 99999
    crossmatch:
      from:
        - trakt_list:
            account: '{? trakt.acc ?}'
            list: collection
            type: movies
      fields:
        - imdb_id
      action: reject
    list_add:
      - imdb_list:
          login: '{? imdb.usr ?}'
          password: '{? imdb.pwd ?}'
          list: watchlist     
      - trakt_list:
          account: '{? trakt.acc ?}'
          list: collection
          type: movies
    if:
      - trakt_collected: reject

  ######################################## Download IMDb's Best-Rated
#   Movies_Best_on_IMDb:
#     priority: 8
#     template:
#       - '{? DownloadManager ?}-Defaults'
#       - '{? DownloadManager ?}-{? ArchiveOrWatchlist ?}-Movies'
#       - '{? DownloadManager ?}-{? DownloadManagerQueue ?}-Queue'
#       - '{? disable_enable_tasks.Download_Best_on_IMDb ?}-Download_Best_on_IMDb'
#       - movies_lookup
#       - German            #differentiation not possible with this feed right now - feed is pre-filtered for German - needs fix
#       - Movie_Streams
#     quality: '{? quality.main ?}'
#     imdb:
#       min_year: 1980
#     if:
#       - trakt_collected: reject
#       - "'horror' in (imdb_genres or [])": reject
#       - "'musical' in (imdb_genres or [])": reject
#       - "'documentary' in (imdb_genres or [])": reject
#       - imdb_year > now.year - 2:
#           imdb:
#             min_score: 8.0
#             min_votes: 100000
#       - imdb_year > now.year - 5:
#           imdb:
#             min_score: 7.7
#             min_votes: 200000
#       - imdb_year > now.year - 10:
#           imdb:
#             min_score: 7.4
#             min_votes: 350000
#       - imdb_year < now.year - 20:
#           imdb:
#             min_score: 7.2
#             min_votes: 500000
#             min_year: 1980
#     require_field:
#       - imdb_id
#       - imdb_name
#       - imdb_year
#       - imdb_url
#       - imdb_genres

  Specials: #(Second IMDB-User Task - not supported)
    template:
      - '{? disable_enable_tasks.Download_Specials ?}-Download_Specials'
    include: Specials.yml

  Specials2: #(Third IMDB-User Task - not supported)
    template:
      - '{? disable_enable_tasks.Download_Specials2 ?}-Download_Specials2'
    include: Specials2.yml

###############################################################################################################################################
## MISC ################################################################################################config#by#snickers2k###################
###############################################################################################################################################


# Run every task on given schedule, except tasks with own interval:
schedules:
  - tasks: '*'
    schedule:
      hour: '{? flexget.scheduler ?}'
  - tasks: 'Movies_Watchlist_Search*'
    schedule:
      hour: '0-6/3'
###############
web_server: yes